 1.3 So sánh giữa các thành phần AWT và Swing
 a. So sánh các container cấp cao nhất
Tiêu chí	                                AWT	Swing
Cửa sổ chính của ứng dụng	                Frame	JFrame
Hộp thoại tương tác	                        Dialog	JDialog
Container không hiển thị dưới dạng cửa sổ	Panel	JPanel
 Nhận xét:
Cả hai đều cung cấp container để chứa thành phần GUI, nhưng Swing mang lại nhiều khả năng tùy biến hơn với các phiên bản kế thừa từ AWT, có hậu tố “J”.

 b. So sánh các thành phần cơ bản
Thành phần giao diện	AWT	        Swing
Nhãn	                Label	        JLabel
Nút	                Button	        JButton
Ô nhập văn bản	        TextField	JTextField
Vùng văn bản nhiều dòng	TextArea	JTextArea
Menu	                Menu, MenuBar	JMenu, JMenuBar
Container chính/phụ	Panel, Frame	JPanel, JFrame

Nhận xét:
Swing mở rộng hầu hết các thành phần của AWT, sử dụng tiền tố “J” và cung cấp thêm tính năng, hỗ trợ tốt hơn cho lập trình GUI hiện đại.

c. So sánh mô hình xử lý sự kiện
Tiêu chí	                 AWT	                                        Swing
Mô hình xử lý sự kiện	         Sử dụng mô hình phân công sự kiện cũ	        Cùng mô hình nhưng hiện đại và linh hoạt hơn
Các giao diện lắng nghe sự kiện	 Có (như ActionListener, MouseListener, ...)	Tương tự, hỗ trợ thêm lambda và lớp ẩn danh
Đa luồng trong GUI	         Không kiểm soát chặt chẽ	                Bắt buộc dùng Event Dispatch Thread (EDT)

 Nhận xét:
Swing khuyến khích sử dụng luồng EDT để đảm bảo giao diện cập nhật ổn định và tránh lỗi bất đồng bộ.

 Tóm lược tổng quát
1. Container cấp cao nhất
AWT sử dụng Frame, Dialog, Applet.

Swing kế thừa và mở rộng với JFrame, JDialog, JApplet.

Swing sử dụng container lightweight (nhẹ, độc lập hệ điều hành), còn AWT là heavyweight (phụ thuộc vào OS gốc).

2. Tên lớp thành phần
Các lớp của Swing có tiền tố J (ví dụ: JLabel, JButton) và hỗ trợ tùy chỉnh cao hơn.

Thành phần của Swing được viết hoàn toàn bằng Java, dễ mở rộng và không phụ thuộc vào mã gốc như AWT.

3. Xử lý sự kiện
Cả hai đều tuân theo mô hình phân công sự kiện (Event Delegation).

Swing thường sử dụng các lớp ẩn danh hoặc lambda để viết gọn mã xử lý sự kiện.

Với Swing, bạn bắt buộc phải cập nhật giao diện trên Event Dispatch Thread (EDT) để đảm bảo tính ổn định.

4. Giao diện người dùng
AWT hiển thị theo giao diện gốc của hệ điều hành.

Swing hỗ trợ Pluggable Look and Feel, cho phép thay đổi giao diện linh hoạt và đồng nhất trên nhiều nền tảng.

**Yêu cầu: Lưu ý cách mã kiểm tra xem Media có triển khai giao diện Playable để tạo nút "Play" hay không.**
Khi hiển thị các sản phẩm trong cửa hàng (Store), một số sản phẩm như DVD hoặc CD có thể phát nội dung, trong khi Book thì không.

Giải pháp:

Dùng giao diện Playable để đánh dấu các loại phương tiện có thể phát được.

Khi tạo giao diện cho từng sản phẩm, sử dụng từ khóa instanceof để kiểm tra xem sản phẩm đó có triển khai Playable hay không.

Nếu đúng, thêm nút "Play". Khi người dùng nhấn nút, ép kiểu sang Playable và gọi phương thức play().

Đây là cách ứng dụng đa hình (polymorphism) trong OOP: chương trình chỉ cần biết đối tượng là Playable mà không cần quan tâm nó là CD hay DVD.